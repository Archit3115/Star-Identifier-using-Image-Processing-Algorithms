import numpy as np
import image
import cv2
from mpi4py import MPI

p = 73
q = 133
comm = MPI.COMM_WORLD
rank = comm.Get_rank()
size = comm.Get_size()

c = np.array([0])
local_x = np.array([0])
a = np.array((p,q),dtype='uint8') # Image has 12788 rows and 40000 colums

if rank == 0:
        img = cv2.imread("Test1.png",0) #Read the image
        print ("Image open and read!")
        a = np.array(img)  #Convert to a Matrix

w1 = MPI.Wtime()
remender = p % size  # devide image horizontally

if rank < remender:
        rowsize = p/size
        rowsize = rowsize + 1
else:
        rowsize = p/size

c = np.array((rowsize,q),int) # Part of image given to each process
comm.Bcast(c, root=0)
local_x = np.zeros(c,dtype='uint8')
comm.Bcast(local_x, root=0)
total = np.array([0])

comm.Scatterv(a,local_x,root=0) # scatter the image

#image processing
img_node_thresh =  cv2.adaptiveThreshold(local_x,255,cv2.ADAPTIVE_THRESH_MEAN_C,cv2.THRESH_BINARY,59,0)
star_count_node = ((200 < img_node_thresh)).sum()
print (" Star count at Rank", rank,"is ", star_count_node)

comm.Reduce(star_count_node,total,op=MPI.SUM,root=0) # Reduce to zero process

if comm.rank == 0:
        w2 = MPI.Wtime()
        print (" Total Stars ", total)
        print (" Total time taken", w2-w1 ,"sec")
